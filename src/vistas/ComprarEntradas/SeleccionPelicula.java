/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package vistas.ComprarEntradas;

import entidades.Pelicula;
import entidades.Proyeccion;
import java.util.List;
import javax.swing.JOptionPane;
import listeners.EntradasListener;
import persistencia.Context;
import persistencia.LugaresData;
import persistencia.PeliculaData;
import persistencia.ProyeccionData;

/**
 *
 * @author Morbo
 */
public class SeleccionPelicula extends javax.swing.JPanel implements EntradasListener {

    /**
     * Creates new form SeleccionPelicula
     */
    private PeliculaData peliculaData = Context.getPeliculaData();
    private ProyeccionData proyeccionData = Context.getProyeccionData();
    private LugaresData lugaresData = Context.getLugaresData();

    public SeleccionPelicula() {
        initComponents();
        llenarComboPeliculas();
        cbxProyecciones.setEnabled(false);

        cbxPelicula.addActionListener(e -> {
            if (cbxPelicula.getSelectedItem() == null) {
                cbxProyecciones.removeAllItems();
                cbxProyecciones.setEnabled(false);
                return;
            }
            llenarComboProyecciones();
            cbxProyecciones.setEnabled(true);
        });

        cbxProyecciones.addActionListener(e -> {
            if (cbxProyecciones.getSelectedItem() != null) {
                Proyeccion proyeccionSelecionada = (Proyeccion) cbxProyecciones.getSelectedItem();
                obtenerLugares();
                llenarInfo();
            } else {
                txtaDetalles.setText("No hay proyecciones disponibles");
            }
        });

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitulo = new javax.swing.JLabel();
        lblPelicula = new javax.swing.JLabel();
        lblProyeccion = new javax.swing.JLabel();
        lblLugares = new javax.swing.JLabel();
        cbxPelicula = new javax.swing.JComboBox<>();
        scrDetalles = new javax.swing.JScrollPane();
        txtaDetalles = new javax.swing.JTextArea();
        cbxProyecciones = new javax.swing.JComboBox<>();
        lblLugaresDisponibles = new javax.swing.JLabel();
        lblLugaresModificable = new javax.swing.JLabel();

        setBackground(new java.awt.Color(33, 33, 33));
        setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        setForeground(new java.awt.Color(7, 10, 20));
        setMinimumSize(new java.awt.Dimension(882, 396));
        setName(""); // NOI18N
        setPreferredSize(new java.awt.Dimension(882, 396));

        lblTitulo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/peli.png"))); // NOI18N

        lblPelicula.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblPelicula.setForeground(new java.awt.Color(204, 153, 0));
        lblPelicula.setText("Pelicula:");

        lblProyeccion.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblProyeccion.setForeground(new java.awt.Color(204, 153, 0));
        lblProyeccion.setText("Proyeccion:");

        lblLugares.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblLugares.setForeground(new java.awt.Color(204, 153, 0));
        lblLugares.setText("Lugares disponibles:");

        txtaDetalles.setEditable(false);
        txtaDetalles.setBackground(new java.awt.Color(70, 70, 70));
        txtaDetalles.setColumns(20);
        txtaDetalles.setForeground(new java.awt.Color(230, 230, 230));
        txtaDetalles.setRows(5);
        txtaDetalles.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        scrDetalles.setViewportView(txtaDetalles);

        lblLugaresDisponibles.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblLugaresDisponibles.setForeground(new java.awt.Color(153, 0, 0));

        lblLugaresModificable.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblLugaresModificable.setForeground(new java.awt.Color(204, 0, 0));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(289, 289, 289)
                        .addComponent(lblTitulo))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(210, 210, 210)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblPelicula)
                            .addComponent(lblLugares)
                            .addComponent(lblProyeccion))
                        .addGap(83, 83, 83)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(lblLugaresModificable, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(lblLugaresDisponibles, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(cbxProyecciones, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(cbxPelicula, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(198, 198, 198)
                        .addComponent(scrDetalles, javax.swing.GroupLayout.PREFERRED_SIZE, 436, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(242, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPelicula)
                    .addComponent(cbxPelicula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblProyeccion)
                    .addComponent(cbxProyecciones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(lblLugaresModificable, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblLugares))
                    .addComponent(lblLugaresDisponibles, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(scrDetalles, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private int lugares;

    private void llenarComboPeliculas() {
        List<Pelicula> peliculas = peliculaData.obtenerTodas();
        cbxPelicula.removeAllItems();
        Pelicula peliculaNull = new Pelicula();
        peliculaNull.setTitulo("Seleccione...");
        cbxPelicula.addItem(peliculaNull);
        for (Pelicula pelicula : peliculas) {
            cbxPelicula.addItem(pelicula);
        }
    }

    private void llenarComboProyecciones() {
        cbxProyecciones.removeAllItems();
        Pelicula peliculaSeleccionada = (Pelicula) cbxPelicula.getSelectedItem();
        List<Proyeccion> proyecciones = proyeccionData.listarProyeccionesPorId(peliculaSeleccionada.getIdPelicula());
        for (Proyeccion proyeccion : proyecciones) {
            cbxProyecciones.addItem(proyeccion);
        }
    }

    private void obtenerLugares() {
        Proyeccion proyeccionSelecionada = (Proyeccion) cbxProyecciones.getSelectedItem();
        if (proyeccionSelecionada == null) {
            lblLugaresModificable.setText("0");
            return;
        }
        lugares = lugaresData.ObtenerLugaresDisponibles(proyeccionSelecionada.getIdProyeccion());
        lblLugaresModificable.setText(String.valueOf(lugares));
    }

    private void llenarInfo() {
        Proyeccion proyeccionSelecionada = (Proyeccion) cbxProyecciones.getSelectedItem();
        Pelicula peliculaSeleccionada = (Pelicula) cbxPelicula.getSelectedItem();
        if (proyeccionSelecionada == null || peliculaSeleccionada == null) {
            return;
        }

        txtaDetalles.setText(
                "Pelicula: " + peliculaSeleccionada.getTitulo() + "\n"
                + "Sala: " + proyeccionSelecionada.getSala().getNroSala() + "\n"
                + "Horario de inicio: " + proyeccionSelecionada.getHoraInicio() + "\n"
                + "Horario de fin: " + proyeccionSelecionada.getHoraFin() + "\n"
        );
    }

    @Override
    public boolean validarDatos() {
        if (cbxPelicula.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(this, "Seleccione una película", "Error", JOptionPane.ERROR);
            return false;
        }
        if (lugares == 0) {
            JOptionPane.showMessageDialog(this, "No hay lugares disponibles en la proyección seleccionada", "Error", JOptionPane.ERROR);
            return false;
        }
        return true;
    }

    @Override
    public Proyeccion guardarDatos() {
        Proyeccion proyeccionSelecionada = (Proyeccion) cbxProyecciones.getSelectedItem();
        return proyeccionSelecionada ;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<Pelicula> cbxPelicula;
    private javax.swing.JComboBox<Proyeccion> cbxProyecciones;
    private javax.swing.JLabel lblLugares;
    private javax.swing.JLabel lblLugaresDisponibles;
    private javax.swing.JLabel lblLugaresModificable;
    private javax.swing.JLabel lblPelicula;
    private javax.swing.JLabel lblProyeccion;
    private javax.swing.JLabel lblTitulo;
    private javax.swing.JScrollPane scrDetalles;
    private javax.swing.JTextArea txtaDetalles;
    // End of variables declaration//GEN-END:variables
}
