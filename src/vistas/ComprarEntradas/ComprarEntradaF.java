package vistas.ComprarEntradas;

import entidades.Comprador;
import entidades.Lugar;
import entidades.Proyeccion;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Component;
import java.util.List;
import javax.swing.JButton;
import javax.swing.JPanel;
import listeners.EntradasListener;

public class ComprarEntradaF extends javax.swing.JInternalFrame {

    private int pasoActual = 1;
    private CardLayout layout;
    private EntradasListener listener;

    private Comprador comprador;
    private Proyeccion proyeccion;
    private List<Lugar> asientosSeleccionados;

    DatosComprador paso1;
    SeleccionPelicula paso2;
    SeleccionAsientos paso3;
    Confirmar paso4;

    public ComprarEntradaF() {
        initComponents();
        aplicarEstiloOscuro(); 

        paso1 = new DatosComprador();
        paso2 = new SeleccionPelicula();
        paso3 = new SeleccionAsientos();
        paso4 = new Confirmar();

        pnlPrincipal.add(paso1, "paso1");
        pnlPrincipal.add(paso2, "paso2");
        pnlPrincipal.add(paso3, "paso3");
        pnlPrincipal.add(paso4, "paso4");

        btnAnterior.setEnabled(false);

        layout = (CardLayout) pnlPrincipal.getLayout();
    }

   
    private void aplicarEstiloOscuro() {
        Color fondoGeneral = new Color(33, 33, 33);
        Color panelOscuro = new Color(45, 45, 45);
        Color textoClaro = new Color(230, 230, 230);
        Color rojoCine = new Color(102,0,0);
        Color grisBoton = new Color(77, 77, 77);

    
        getContentPane().setBackground(fondoGeneral);
        setBackground(fondoGeneral);

        pnlPrincipal.setBackground(panelOscuro);

     
        btnSiguiente.setBackground(rojoCine);
        btnSiguiente.setForeground(Color.WHITE);
        btnSiguiente.setFocusPainted(false);
        btnSiguiente.setBorderPainted(false);


        btnAnterior.setBackground(grisBoton);
        btnAnterior.setForeground(Color.WHITE);
        btnAnterior.setFocusPainted(false);
        btnAnterior.setBorderPainted(false);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlPrincipal = new javax.swing.JPanel();
        btnSiguiente = new javax.swing.JButton();
        btnAnterior = new javax.swing.JButton();

        setBackground(new java.awt.Color(51, 51, 51));
        setClosable(true);
        setMinimumSize(new java.awt.Dimension(900, 500));
        setPreferredSize(new java.awt.Dimension(900, 500));

        pnlPrincipal.setBackground(new java.awt.Color(51, 51, 51));
        pnlPrincipal.setLayout(new java.awt.CardLayout());

        btnSiguiente.setBackground(new java.awt.Color(102, 0, 0));
        btnSiguiente.setText("Siguiente");
        btnSiguiente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSiguienteActionPerformed(evt);
            }
        });

        btnAnterior.setText("Anterior");
        btnAnterior.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAnteriorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(712, Short.MAX_VALUE)
                        .addComponent(btnAnterior)
                        .addGap(18, 18, 18)
                        .addComponent(btnSiguiente))
                    .addComponent(pnlPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlPrincipal, javax.swing.GroupLayout.PREFERRED_SIZE, 396, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSiguiente)
                    .addComponent(btnAnterior))
                .addContainerGap(33, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSiguienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSiguienteActionPerformed
        // TODO add your handling code here:
        avanzar();
    }//GEN-LAST:event_btnSiguienteActionPerformed

    private void btnAnteriorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAnteriorActionPerformed
        // TODO add your handling code here:
        volver();
    }//GEN-LAST:event_btnAnteriorActionPerformed

    private void avanzar() {

        Component actual = pnlPrincipal.getComponent(pasoActual - 1);

        if (actual instanceof EntradasListener) {
            EntradasListener<?> listener = (EntradasListener<?>) actual;
            if (!listener.validarDatos()) {
                return;
            }
            Object datos = listener.guardarDatos();
            switch (pasoActual) {
                case 1:
                    comprador = (Comprador) datos;
                    break;
                case 2:
                    proyeccion = (Proyeccion) datos;
                    break;
                case 3:
                    asientosSeleccionados = (List<Lugar>) datos;
                    break;
                default:
                    break;
            }
        }

        if (pasoActual < 3) {
            pasoActual++;
            if (pasoActual == 3) {
                paso3.setProyeccionData(proyeccion.getIdProyeccion(), proyeccion.getPrecio());
            }
            if(pasoActual == 4) {
                paso4.setData(comprador, proyeccion, asientosSeleccionados);
            }
            layout.show(pnlPrincipal, "paso" + pasoActual);
            btnAnterior.setEnabled(true);
        }

        if (pasoActual == 3) {
            btnSiguiente.setText("Confirmar");
        }
    }

    private void volver() {
        if (pasoActual > 1) {
            pasoActual--;
            layout.show(pnlPrincipal, "paso" + pasoActual);
            btnSiguiente.setText("Siguiente");
        }

        if (pasoActual == 1) {
            btnAnterior.setEnabled(false);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAnterior;
    private javax.swing.JButton btnSiguiente;
    private javax.swing.JPanel pnlPrincipal;
    // End of variables declaration//GEN-END:variables
}
